name: Terraform (manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "tfvars env to use"
        required: true
        default: dev
        type: choice
        options: [dev, prod]
      action:
        description: "What to run"
        required: true
        default: plan
        type: choice
        options: [plan, apply, destroy]

jobs:
  terraform:
    # optional: gate prod via Environments in GitHub (Settings â†’ Environments)
    environment: ${{ github.event.inputs.environment }}

    runs-on: ubuntu-latest
    permissions:
      id-token: write   # OIDC to AWS
      contents: read

    concurrency:
      group: terraform-${{ github.event.inputs.environment }}
      cancel-in-progress: false

    env:
      TF_IN_AUTOMATION: "true"
      AWS_REGION: "us-east-1"
      TFVARS_FILE: terraform/envs/${{ github.event.inputs.environment }}.tfvars

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: terraform
        run: terraform plan -var-file="${{ env.TFVARS_FILE }}"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform
        run: terraform apply -auto-approve -var-file="${{ env.TFVARS_FILE }}"

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: terraform
        run: terraform destroy -auto-approve -var-file="${{ env.TFVARS_FILE }}"
